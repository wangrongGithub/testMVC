package cn.wr.Conf;

import org.junit.Test;

import java.util.*;

public class Main
{
    @Test
    public  void main1()
    {
        String ProjectPath=this.getClass().getResource("").getPath();

        Map<Integer,List<String>> map=ReadAllTalks.readTalks(ProjectPath+"111.txt", new realSplit());
        System.out.println(map+"\n"+map.size());
        List<Integer> list=new LinkedList<>();list.add(60);list.add(45);list.add(30);
        List<Integer>nums=new LinkedList<>();nums.add(5);nums.add(5);nums.add(5);
        //getArrange(List<Integer> minAlltime,List<Integer> maxAlltime,Map<Integer, List<String>> map, LimitConstranit limit)
        List<Integer> minAlltime=new ArrayList<>(); List<Integer> maxAlltime=new ArrayList<>();
        minAlltime.add(0);minAlltime.add(0);minAlltime.add(180);minAlltime.add(180);
        maxAlltime.add(180);maxAlltime.add(180);maxAlltime.add(240);maxAlltime.add(240);
        // new realArrangement().getArrange(180,240, list/*从大到小排序啊*/, null);
        new realArrangement().getArrange(minAlltime, maxAlltime, map/*有好几种活动*/);
        System.out.println(ProjectPath);
    }
    @Test
    public  void main2()
    {
        String str="ifstatement <block0> parExpression ( expression doctorhoodLantana methodCall compareAndSet ( expressionList false , true ) ) statement expression Tracer methodCall tracepointLocation ( expressionList stringValue0 , stringValue1 ) localVariableDeclaration File variableDeclarator variable1 = expression new creator File arguments ( stringValue2 ) ifstatement <block1> parExpression ( expression ! expression expression variable1 methodCall getParentFile () methodCall exists () && expression ! expression expression variable1 methodCall getParentFile () methodCall mkdirs () ) statement expression expression System . err methodCall println ( stringValue3 ) throwstatement <block2> expression new creator RuntimeException arguments ( stringValue4 ) <block2> else trystatement <block3> statement expression BlockListImpl . zenithThaliacean = expression new creator PrintStream arguments ( expressionList expression new creator FileOutputStream arguments ( expressionList variable1 , false ) , true , stringValue5 ) catchClause catch ( UnsupportedEncodingException countshipSuperfuse ) statement expression expression System . err methodCall printf ( expressionList stringValue6 , expression countshipSuperfuse methodCall getMessage () ) statement expression BlockListImpl . zenithThaliacean = null throwstatement <block4> expression new creator RuntimeException arguments ( expressionList stringValue7 , countshipSuperfuse ) <block4> catchClause catch ( FileNotFoundException forerememberedForepiece ) statement expression expression System . err methodCall printf ( expressionList stringValue6 , expression forerememberedForepiece methodCall getMessage () ) statement expression BlockListImpl . zenithThaliacean = null throwstatement <block5> expression new creator RuntimeException arguments ( expressionList stringValue7 , forerememberedForepiece ) <block5> <block3> ifstatement <block6> parExpression ( expression BlockListImpl . zenithThaliacean != null ) trystatement <block7> localVariableDeclaration String variableDeclarator variable2 = expression System methodCall getenv ( stringValue8 ) ifstatement <block8> parExpression ( variable2 == null || expression ! expression variable2 methodCall equals ( stringValue9 ) ) localVariableDeclaration String variableDeclarator variable3 = expression System methodCall getenv ( stringValue10 ) ifstatement <block9> parExpression ( null != variable3 ) localVariableDeclaration File variableDeclarator variable4 = expression new creator File arguments ( variable3 ) ifstatement <block10> parExpression ( expression variable4 methodCall exists () && expression ! expression variable4 methodCall isDirectory () ) trystatement <block11> localVariableDeclaration String variable5 localVariableDeclaration Scanner variableDeclarator variable6 = expression expression new creator Scanner arguments ( expressionList variable4 , stringValue11 ) methodCall useDelimiter ( stringValue12 ) ifstatement <block12> parExpression ( expression variable6 methodCall hasNext () ) statement variable5 = expression variable6 methodCall next () else statement variable5 = stringValue13 <block12> ifstatement <block13> parExpression ( null != variable5 ) localVariableDeclaration typeType String [] variableDeclarator variable7 = expression new creator String arrayCreatorRest [ intValue0 ] statement expression variable7 [ intValue1 ] = variable5 localVariableDeclaration EctoenzymeOophoron variableDeclarator variable8 = expression new creator EctoenzymeOophoron arguments ( variable7 ) trystatement <block14> localVariableDeclaration String variableDeclarator variable9 = expression System methodCall getProperty ( stringValue14 ) ifstatement <block15> parExpression ( null != variable9 ) ifstatement <block16> parExpression ( expression ! expression variable9 methodCall startsWith ( stringValue15 ) ) throwstatement <block17> expression new creator IllegalArgumentException arguments ( stringValue16 ) <block17> <block16> <block15> catchClause catch ( IllegalArgumentException forcible_kinoplasm ) finallyBlock finally statement expression Tracer methodCall tracepointWeaknessStart ( expressionList stringValue17 , stringValue18 , stringValue19 ) statement expression Tracer methodCall tracepointVariableString ( expressionList stringValue20 , expression expression variable8 methodCall gettrainmaster_pentaphyllous () [ intValue1 ] ) statement expression Tracer methodCall tracepointMessage ( stringValue21 ) localVariableDeclaration String variableDeclarator variable10 = stringValue22 + expression expression variable8 methodCall gettrainmaster_pentaphyllous () [ intValue1 ] statement expression Tracer methodCall tracepointVariableString ( expressionList stringValue23 , variable10 ) statement expression Tracer methodCall tracepointMessage ( stringValue24 ) localVariableDeclaration classOrInterfaceType java . lang . ProcessBuilder variableDeclarator variable11 = expression new creator createdName java . lang . ProcessBuilder arguments ( expressionList stringValue25 , stringValue26 , variable10 ) statement expression variable11 methodCall redirectErrorStream ( true ) localVariableDeclaration StringBuilder variableDeclarator variable12 = expression new creator StringBuilder arguments () forstatement <block18> enhancedForControl String variable13 : expression variable11 methodCall command () statement expression variable12 methodCall append ( variable13 ) statement expression variable12 methodCall append ( stringValue27 ) <block18> statement expression Tracer methodCall tracepointVariableString ( expressionList stringValue28 , expression variable12 methodCall toString () ) localVariableDeclaration classOrInterfaceType java . lang . Process variableDeclarator variable14 = null trystatement <block19> statement expression Tracer methodCall tracepointMessage ( stringValue29 ) statement expression Tracer methodCall tracepointMessage ( stringValue30 ) statement variable14 = expression variable11 methodCall start () statement expression Tracer methodCall tracepointMessage ( stringValue31 ) catchClause catch ( IOException ioe ) statement expression Tracer methodCall tracepointError ( expression expression ioe methodCall getClass () methodCall getName () + stringValue32 + expression ioe methodCall getMessage () ) statement expression expression BlockListImpl . zenithThaliacean methodCall println ( stringValue33 ) <block19> ifstatement <block20> parExpression ( variable14 != null ) localVariableDeclaration String variableDeclarator variable15 = null localVariableDeclaration classOrInterfaceType java . io . BufferedReader variableDeclarator variable16 = expression new creator createdName java . io . BufferedReader arguments ( expression new creator createdName java . io . InputStreamReader arguments ( expression variable14 methodCall getInputStream () ) ) trystatement <block21> statement expression Tracer methodCall tracepointMessage ( stringValue34 ) whilestatement <block22> parExpression ( primary ( variable15 = expression variable16 methodCall readLine () ) != null ) statement expression expression BlockListImpl . zenithThaliacean methodCall println ( variable15 ) <block22> catchClause catch ( IOException ioe ) statement expression Tracer methodCall tracepointError ( expression expression ioe methodCall getClass () methodCall getName () + stringValue32 + expression ioe methodCall getMessage () ) statement expression expression BlockListImpl . zenithThaliacean methodCall println ( stringValue35 ) <block21> trystatement <block23> statement expression Tracer methodCall tracepointMessage ( stringValue36 ) localVariableDeclaration int variableDeclarator variable17 = expression variable14 methodCall waitFor () ifstatement <block24> parExpression ( variable17 != intValue2 ) statement expression Tracer methodCall tracepointError ( stringValue37 ) statement expression Tracer methodCall tracepointVariableInt ( expressionList stringValue38 , variable17 ) statement expression expression BlockListImpl . zenithThaliacean methodCall printf ( expressionList stringValue39 , variable17 ) <block24> catchClause catch ( qualifiedName java . lang . InterruptedException ie ) statement expression Tracer methodCall tracepointError ( expression expression ie methodCall getClass () methodCall getName () + stringValue32 + expression ie methodCall getMessage () ) statement expression expression BlockListImpl . zenithThaliacean methodCall println ( stringValue40 ) <block23> <block20> statement expression Tracer methodCall tracepointWeaknessEnd () <block14> <block13> catchClause catch ( FileNotFoundException atomicallyMinuetish ) throwstatement <block25> expression new creator RuntimeException arguments ( expressionList stringValue41 , atomicallyMinuetish ) <block25> <block11> <block10> <block9> <block8> finallyBlock finally statement expression expression BlockListImpl . zenithThaliacean methodCall close () <block7> <block6> <block1> <block0> localVariableDeclaration ListManagedBlock variableDeclarator variable18 = null trystatement <block26> statement variable18 = expression _blocks [ variable0 ] ifstatement <block27> parExpression ( variable18 == null ) throwstatement <block28> expression new creator IOException arguments ( stringValue42 + variable0 + stringValue43 + stringValue44 ) <block28> <block27> statement expression _blocks [ variable0 ] = null catchClause catch ( ArrayIndexOutOfBoundsException ignored ) throwstatement <block29> expression new creator IOException arguments ( stringValue45 + variable0 + stringValue46 + primary ( expression _blocks . length - intValue3 ) + stringValue47 ) <block29> <block26> returnstatement <block30> variable18 <block30>";
        //分割用的子串
        String split1=str.substring(0,8500);
        //进行字符转义
        String  subStr=split1.replaceAll("\\[","\\\\\\[").replaceAll("\\]","\\\\\\]");
        subStr=subStr.replaceAll("\\(","\\\\\\(").replaceAll("\\)","\\\\\\)");
        //.是匹配任意字符
        subStr=subStr.replaceAll("\\.","\\\\\\.");
        subStr=subStr.replaceAll("\\|","\\\\\\|");
        subStr=subStr.replaceAll("\\+","\\\\\\+");
        subStr=subStr.replaceAll("\\*","\\\\\\*");
        System.out.println(subStr);
        String[] strs=str.split(subStr);
        for(String ss:strs)
            System.out.println(ss);
        System.out.println("sss  "+str.split(subStr)[0]);

    }
}
